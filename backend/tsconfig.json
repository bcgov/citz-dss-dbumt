{
  // Find more information on the following here: https://www.typescriptlang.org/tsconfig/
  "compilerOptions": {
    // -- TYPE CHECKING --
    "strict": true, // All files parsed in ECMAScript mode. All Strict options set to true
    "noImplicitAny": true, // TypeScript issue an error when a variable's type can not be infered
    "exactOptionalPropertyTypes": true, // Allows optional properties to be defined as "undefined" without error
    // -- MODULES --
    "baseUrl": ".", // Set base directory to resolve bare specifier module names
    "module": "CommonJS", // Set module system for the program
    "resolveJsonModule": true, // Import modules with .json extension
    "moduleResolution": "node", // Set module resolution strategy, support for ECMAScript imports and CommonJS require
    "paths": { // import lookup location relative to baseUrl
      "@/*": [
        "./src/*"
      ] // With this (and tsconfig-paths) we can use `@/` for pathing from `src/`
    },
    // -- EMIT --
    "outDir": "dist", // Files created by `tsc` command will be stored here
    "sourceMap": true, // Enables source map files to be generated (debuggers can see original TypeScript file)
    "removeComments": true, // Strips all comments when converting to JS
    // -- INTEROP CONSTRAINTS --
    "allowSyntheticDefaultImports": true, // allows imports from modules without explicitly specified default export.
    "esModuleInterop": true, // Treats commonJS modules into ES6 modules. No more `require()`
    "forceConsistentCasingInFileNames": true, // Standardizes case-sensitivity between systems
    // -- LANGUAGE AND ENVIRONMENT --
    "emitDecoratorMetadata": true, // Support for emitting type metadata
    "experimentalDecorators": true, // Enables decorator support with TypeScript
    "target": "es2022" // Set JS features before es2022 to be downgraded
    // -- COMPLETENESS --
    // "skipLibCheck": true,                   // Skip type checking of declaration files. Unsure if needed.
  },
  // Patterns to include in the program. Currently everything
  "include": [
    "./**/*"
  ],
  // Patterns to skip when resolving `include`
  "exclude": [
    "tsconfig.json",
    "node_modules/",
    "build/",
    "coverage/"
  ]
}
